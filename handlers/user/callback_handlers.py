from keyboards.user_markup.keyboard_markup import sos_menu_markup
from loader import dp, bot, db
from utils.number_process import process_start_query
from aiogram.types import CallbackQuery
from aiogram.dispatcher import FSMContext
from keyboards.user_markup.keyboard_markup import sos_menu_markup, main_start_menu_markup


@dp.callback_query_handler(text='niz')
async def help_inline_markup_callback_handler(query: CallbackQuery, state: FSMContext):
    user_id = query.from_user.id
    db.update_pidkazka_count(user_id)  # —Å—á–µ—Ç—á–∏–∫
    answer_data = query.data
    await query.answer("–ö–æ–∂–µ–Ω —Ä–∞–∑ –¥—ñ–ª–∏–º–æ –Ω–∞ 2 –¥—ñ–∞–ø–∞–∑–æ–Ω, —â–æ –∑–∞–ª–∏—à–∏–≤—Å—è", show_alert=True)
    # always answer callback queries, even if you have nothing to say
    await bot.send_message(query.from_user.id, "–ó—Ä–æ–∑—É–º—ñ–ª–æ? –ö—Ä—É—Ç–æ! –¢–∏—Å–Ω–∏ —Å—Ç–∞—Ä—Ç, —â–æ–± –ø–æ—á–∞—Ç–∏\n\n "
                                               "–î–æ—Å—ñ —É –≤–∞—É–∫—É–º—ñ? ‚û°Ô∏èSOS‚¨ÖÔ∏è -  –¥–ª—è –∑–≤'—è–∑–∫—É –∑ –∞–¥–º—ñ–Ω–æ–º.",
                                               reply_markup=sos_menu_markup())
    await state.reset_state(with_data=False)


# Use multiple registrators. Handler will execute when one of the filters is OK
@dp.callback_query_handler(text='no')  # if cb.user_data == 'no'
@dp.callback_query_handler(text='yes')  # if cb.user_data == 'yes'
async def inline_kb_answer_callback_handler(query: CallbackQuery, state: FSMContext):
    answer_data = query.data
    # always answer callback queries, even if you have nothing to say
    if answer_data == 'yes':
        await query.message.delete()
        await process_start_query(query, state)
    elif answer_data == "no":
        text = f"„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è\n "\
            f"<b>–õ–∞–¥–∏, –Ω–∞–¥—É–º–∞—î—à –∑—ñ–≥—Ä–∞—Ç–∏ –ø—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏ —Å–ª–æ–≤–æ –°–¢–ê–†–¢ ‚¨áÔ∏è‚è∫</b> "
        await bot.send_message(query.from_user.id, text, reply_markup=main_start_menu_markup())
        await query.answer(f"–ü–æ–∫–∞—Å–∏–∫–∏ üòú", show_alert=True)
        await query.message.delete()
        await state.reset_state(with_data=False)
