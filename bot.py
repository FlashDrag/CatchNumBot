from aiogram.utils.executor import start_webhook
import logging
# from data_base.sqlite_db import BotDB
from loader import dp, bot
# from aiogram.contrib.fsm_storage.memory import MemoryStorage
from handlers.common import register_handlers_common
from utils.number_process import register_handlers_num_process
import config
from data_base.ps_db import BotDB
dic = {1:"ü•á", 2: "ü•à", 3: "ü•â", 4: "4Ô∏è‚É£", 5: "5Ô∏è‚É£", 6: "6Ô∏è‚É£", 7: "–æ—Å—Ç–∞–Ω–Ω—å–æ—óüòì"}
users = {}

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤–∞–∂–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)
logger.setLevel(logging.DEBUG)


async def on_startup(dp):
    await bot.set_webhook(config.WEBHOOK_URL, drop_pending_updates=True)
    print("–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω")


async def on_shutdown(dp):
    await bot.delete_webhook()
    BotDB.conn.close()
    BotDB.cursor.close()

# BotDB('ugadaika.db').setup()
register_handlers_common(dp)
register_handlers_num_process(dp)


if __name__ == '__main__':
    start_webhook(
        dispatcher = dp, 
        skip_updates=True,
        on_startup=on_startup,
        on_shutdown=on_shutdown,
        webhook_path=config.WEBHOOK_PATH,
        host=config.WEBAPP_HOST,
        port=config.WEBAPP_PORT,
    )

# BotFather
# start - –ó–∞–ø—É—Å–∫ –Ü–≥—Ä–∏ üëä
# progress - –ú—ñ–π —Ä—ñ–≤–µ–Ω—å üí™
# help - –î–æ–ø–æ–º–æ–≥–∞ üôè
# cancel - –í—ñ–¥–º—ñ–Ω–∞ üñï